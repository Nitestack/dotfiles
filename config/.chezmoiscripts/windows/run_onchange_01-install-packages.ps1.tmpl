# {{ template "pwsh-library.ps1" . }}

# ╭──────────────────────────────────────────────────────────╮
# │ Install essentials                                       │
# ╰──────────────────────────────────────────────────────────╯
_LogHeader "Essential Packages"

# {{ $essentialPackages := list }}
# {{ $essentialCustomPackages := list }}
# {{ range .packages.essentials }}
#   {{ if hasKey . "win" }}
#     {{ if eq "string" (printf "%T" .win) }}
#       {{ $essentialPackages = mustAppend $essentialPackages .win }}
#     {{ else if hasKey .win "custom" }}
#       {{ $essentialCustomPackages = mustAppend $essentialCustomPackages (dict .name .win.custom) }}
#     {{ end }}
#   {{ else if hasKey . "custom" }}
#     {{ $essentialCustomPackages = mustAppend $essentialCustomPackages (dict .name .custom) }}
#   {{ end }}
# {{ end }}

# ── winget ────────────────────────────────────────────────────────────
Write-Output "## winget:" | gum format
_Install-PackagesWinget "{{- $essentialPackages | join "\", \"" -}}"

# ── custom ────────────────────────────────────────────────────────────
Write-Output "## custom:" | gum format
# {{ range $essentialCustomPackages }}
# {{ range $cmd_name, $lines := . }}
if (Get-Command "{{- $cmd_name -}}" -ErrorAction SilentlyContinue) {
  _Log -l warn "{{- $cmd_name }} is already installed"
}
else {
  try {
    # {{ "\n" }}{{ $lines }}
    _Log -l info "Installed {{ $cmd_name -}}"
  }
  catch {
    throw "Command failed: $_"
  }
}
# {{ end }}
# {{ end }}

# ── volta ─────────────────────────────────────────────────────────────
Write-Output "## volta:" | gum format
$voltaList = volta list --format plain
# {{ range (.packages.volta | uniq) }}
if ($voltaList -match "{{- . -}}") {
  _Log -l warn --prefix "volta" "{{- . }} is already installed"
}
else {
  try {
    volta install "{{- . -}}"
    _Log -l info "Installed {{ . -}}"
  }
  catch {
    throw "Command failed: $_"
  }
}
# {{ end }}

Write-Host
_Log -l info "Installed essential packages"

# ╭──────────────────────────────────────────────────────────╮
# │ Install packages                                         │
# ╰──────────────────────────────────────────────────────────╯
_LogHeader "Packages"

# ── winget ────────────────────────────────────────────────────────────
Write-Output "## winget:" | gum format
_Install-PackagesWinget "{{- .packages.win.winget | join "\", \"" -}}"

# ── PowerShell Gallery ────────────────────────────────────────────────
Write-Output "## PowerShell Gallery:" | gum format
_Install-PackagesGallery "{{- .packages.win.modules | uniq | sortAlpha | join "\" \"" -}}"

# ── Global npm dependencies ───────────────────────────────────────────
Write-Output "## pnpm:" | gum format
$pnpmList = pnpm list -g --depth 0
# {{ range (.packages.npm | uniq | sortAlpha) }}
if ($pnpmList -match "{{- . -}}") {
  _Log -l warn --prefix "pnpm" "{{- . }} is already installed"
}
else {
  try {
    pnpm add -g "{{- . -}}"
    _Log -l info --prefix "pnpm" "Installed {{ . -}}"
  }
  catch {
    throw "Command failed: $_"
  }
}
# {{ end }}

Write-Host
_Log -l info "Installed packages"
