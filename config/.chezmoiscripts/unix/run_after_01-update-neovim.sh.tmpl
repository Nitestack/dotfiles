#!/usr/bin/env bash

# {{ template "bash-library.sh" . }}

# The following line is for ShellCheck to correctly identify the above included library
true || source "../../.chezmoitemplates/bash-library.sh"

_log_header "Neovim"

if gum confirm "Proceed with the updates?" --default=false; then
	_spin "Updating Neovim" -- bob update --all
	_log -l info "Updated Neovim"

	echo
	_spin "Updating Neovim plugins" -- nvim --headless -c "Lazy! sync" +qa
	_log -l info "Updated Neovim plugins"

	echo
	_spin "Updating Mason packages" -- nvim --headless -c "lua vim.schedule(function() vim.api.nvim_create_autocmd('User', { pattern = 'MasonToolsUpdateCompleted', command = 'qa' }); require('mason-tool-installer').check_install(true) end)"
	_log -l info "Updated Mason packages"

	source_path=$(chezmoi source-path)
	config_path="${XDG_CONFIG_HOME:-${HOME}/.config}/nvim"
	current_path=$(pwd)

	echo
	_log -l info "Checking if lazy-lock.json has changed and commit"
	lazy_lock_path=$(find "${source_path}" -type f -name "*lazy-lock.json" -print -quit)
	if [[ ! -f "${lazy_lock_path}" ]]; then
		_log -l error "Could not find lazy-lock.json file in ${source_path}"
		exit 1
	fi
	updated_lazy_lock_path=$(find "${config_path}" -type f -name "*lazy-lock.json" -print -quit)
	if [[ ! -f "${updated_lazy_lock_path}" ]]; then
		_log -l error "Could not find lazy-lock.json file in ${config_path}"
		exit 1
	fi
	cp -f "${updated_lazy_lock_path}" "${lazy_lock_path}"
	cd "$(realpath "$(chezmoi source-path)/..")" || exit 1
	# Check if there are any changes
	if git diff --quiet "${lazy_lock_path}"; then
		_log -l warn "No changes in lazy-lock.json file"
	else
		git add "${lazy_lock_path}"
		git commit "${lazy_lock_path}" -m "chore(nvim): update Neovim plugins"
		cd "${current_path}" || exit 1
		_log -l info "Committed updated lazy-lock.json file"
	fi

	echo
	_log -l info "Checking if lazyvim.json has changed and commit"
	lazyvim_path=$(find "${source_path}" -type f -name "*lazyvim.json" -print -quit)
	if [[ ! -f "${lazyvim_path}" ]]; then
		_log -l error "Could not find lazyvim.json file in ${source_path}"
		exit 1
	fi
	updated_lazyvim_path=$(find "${config_path}" -type f -name "*lazyvim.json" -print -quit)
	if [[ ! -f "${updated_lazyvim_path}" ]]; then
		_log -l error "Could not find lazyvim.json file in ${config_path}"
		exit 1
	fi
	cp -f "${updated_lazyvim_path}" "${lazyvim_path}"
	cd "$(realpath "$(chezmoi source-path)/..")" || exit 1
	# Check if there are any changes
	if git diff --quiet "${lazyvim_path}"; then
		_log -l warn "No changes in lazyvim.json file"
	else
		git add "${lazyvim_path}"
		git commit "${lazyvim_path}" -m "chore(nvim): update LazyVim config"
		cd "${current_path}" || exit 1
		_log -l info "Committed updated lazyvim.json file"
	fi

	_log -l info "Completed updates"
else
	_log -l warn "Skipping update process"
fi
