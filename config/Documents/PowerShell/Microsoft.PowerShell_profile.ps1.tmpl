# ╭──────────────────────────────────────────────────────────╮
# │ PowerShell Profile                                       │
# ╰──────────────────────────────────────────────────────────╯

# ── PSReadline + PSFzf options ────────────────────────────────────────
Set-PSReadLineOption -PredictionSource HistoryAndPlugin -EditMode Vi
Set-PSReadlineKeyHandler -Key Ctrl+p -Function HistorySearchBackward
Set-PSReadlineKeyHandler -Key Ctrl+n -Function HistorySearchForward
Set-PsFzfOption -PSReadLineChordProvider "Ctrl+f" -PSReadLineChordReverseHistory "Ctrl+r"
Set-PSReadLineKeyHandler -Key Tab -ScriptBlock { Invoke-FzfTabCompletion }

# ── Aliases ───────────────────────────────────────────────────────────
Set-Alias lg lazygit
Remove-Alias ls

$EzaOptions="--icons always --git --group-directories-first"

function ls {
  Invoke-Expression "eza $EzaOptions -g $($Args -join ' ')"
}
function la {
  Invoke-Expression "eza $EzaOptions -gla $($Args -join ' ')"
}

# ── Linux utils ───────────────────────────────────────────────────────
function which($Command) {
  Get-Command -Name $Command -ErrorAction SilentlyContinue | Select-Object -ExpandProperty Path -ErrorAction SilentlyContinue
}
function unzip($File) {
  Write-Output("Extracting", $File, "to", $PWD)
  $FullFile = Get-ChildItem -Path $PWD -Filter .\cove.zip | ForEach-Object { $_.FullName }
  Expand-Archive -Path $FullFile -DestinationPath $PWD
}
function grep($Regex, $Dir) {
  if ($Dir) {
    Get-ChildItem $Dir | Select-String $Regex
    return
  }
  $input | Select-String $Regex
}
function touch($File) {
  "" | Out-File $File -Encoding ASCII
}
function pkill($Name) {
  Get-Process $Name -ErrorAction SilentlyContinue | Stop-Process
}
function pgrep($Name) {
  Get-Process $Name
}

# ── Environment Variables ─────────────────────────────────────────────
$env:BAT_THEME = "Catppuccin Mocha"

# ── User config ───────────────────────────────────────────────────────

# Load oh-my-posh
oh-my-posh init pwsh --config "$env:USERPROFILE\.config\oh-my-posh\config.yml" | Invoke-Expression

# Load zoxide (must stay at the end)
Invoke-Expression (& { (zoxide init --cmd cd powershell | Out-String) })

# fastfetch
fastfetch
