# ╭──────────────────────────────────────────────────────────╮
# │ POWERSHELL PROFILE                                       │
# ╰──────────────────────────────────────────────────────────╯

# ── PSReadline + PSFzf options ────────────────────────────────────────
Set-PSReadLineOption -PredictionSource HistoryAndPlugin -EditMode Vi
Set-PSReadlineKeyHandler -Key Ctrl+p -Function HistorySearchBackward
Set-PSReadlineKeyHandler -Key Ctrl+n -Function HistorySearchForward
Set-PsFzfOption -PSReadLineChordProvider "Ctrl+f" -PSReadLineChordReverseHistory "Ctrl+r"
Set-PSReadLineKeyHandler -Key Tab -ScriptBlock { Invoke-FzfTabCompletion }

# ── Aliases ───────────────────────────────────────────────────────────
Set-Alias vim nvim
Set-Alias vi nvim
Set-Alias v nvim
Set-Alias c Clear-Host
Set-Alias lvim "$env:USERPROFILE\.local\bin\lvim.ps1"
Remove-Alias ls
Remove-Alias cat
Set-Alias cat bat

$EzaOptions="--group-directories-first --icons"

function ls {
  Invoke-Expression "eza $EzaOptions $($Args -join ' ')"
}
function la {
  Invoke-Expression "eza $EzaOptions -al $($Args -join ' ')"
}
function lt {
  Invoke-Expression "eza $EzaOptions -T $($Args -join ' ')"
}
function admin {
  if ($Args.Count -gt 0) {
    $argList = "& '" + $Args + "'"
    Start-Process "$PSHome\pwsh.exe" -Verb runAs -ArgumentList $argList
  }
  else {
    Start-Process "$PSHome\pwsh.exe" -Verb runAs
  }
}
Set-Alias -Name sudo -Value admin

# ── Linux utils ───────────────────────────────────────────────────────
function which($Command) {
  Get-Command -Name $Command -ErrorAction SilentlyContinue | Select-Object -ExpandProperty Path -ErrorAction SilentlyContinue
}
function reload-profile {
  & $PROFILE
}
function find-file($Name) {
  Get-ChildItem -recurse -filter "*${Name}*" -ErrorAction SilentlyContinue | ForEach-Object {
    $PlacePath = $_.directory
    Write-Output "${PlacePath}\${_}"
  }
}
function unzip($File) {
  Write-Output("Extracting", $File, "to", $PWD)
  $FullFile = Get-ChildItem -Path $PWD -Filter .\cove.zip | ForEach-Object { $_.FullName }
  Expand-Archive -Path $FullFile -DestinationPath $PWD
}
function grep($Regex, $Dir) {
  if ($Dir) {
    Get-ChildItem $Dir | Select-String $Regex
    return
  }
  $input | Select-String $Regex
}
function touch($File) {
  "" | Out-File $File -Encoding ASCII
}
function df {
  Get-Volume
}
function sed($File, $Find, $Replace) {
    (Get-Content $File).replace("$Find", $Replace) | Set-Content $File
}
function export($Name, $Value) {
  Set-Item -Force -Path "env:$Name" -Value $Value;
}
function pkill($Name) {
  Get-Process $Name -ErrorAction SilentlyContinue | Stop-Process
}
function pgrep($Name) {
  Get-Process $Name
}

# ── Environment Variables ─────────────────────────────────────────────
export "EDITOR" "{{- .editor -}}"
export "KOMOREBI_CONFIG_HOME" "$env:APPDATA\komorebi"

# ── User config ───────────────────────────────────────────────────────

# Load oh-my-posh
oh-my-posh init pwsh --config "$env:USERPROFILE\.config\oh-my-posh\config.yml" | Invoke-Expression

# Load zoxide (must stay at the end)
Invoke-Expression (& { (zoxide init --cmd cd powershell | Out-String) })

# fastfetch
fastfetch
