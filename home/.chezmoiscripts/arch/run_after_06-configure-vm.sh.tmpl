#!/usr/bin/env bash

# {{ template "bash-library.sh" . }}

# The following line is for ShellCheck to correctly identify the above included library
true || source "../../.chezmoitemplates/bash-library.sh"

_log_header "Virtualization Configuration"

_enable_system_service "libvirtd.service"
_enable_system_service "libvirtd.socket"

_set_option_with_sudo "unix_sock_group" "libvirt" "/etc/libvirt/libvirtd.conf" true true
_set_option_with_sudo "unix_sock_rw_perms" "0770" "/etc/libvirt/libvirtd.conf" true true

_set_option_with_sudo "firewall_backend" "iptables" "/etc/libvirt/network.conf" true

_set_option_with_sudo "user" "${USER}" "/etc/libvirt/qemu.conf" true true
_set_option_with_sudo "group" "${USER}" "/etc/libvirt/qemu.conf" true true

# Check if the user is in the kvm and libvirt groups
if groups "${USER}" | grep -qE "\b(kvm|libvirt)\b"; then
	_log -l warn --prefix "usermod" "${USER} is already in kvm and libvirt groups"
else
	sudo -v
	_spin "Adding ${USER} to kvm and libvirt groups" -- sudo usermod -aG kvm,libvirt "${USER}"
	_log -l info --prefix "usermod" "Added ${USER} to kvm and libvirt groups"
fi

# Check the status of the libvirtd service
if ! systemctl is-active --quiet libvirtd.service; then
	sudo systemctl restart libvirtd.service
fi
if ! systemctl is-active --quiet libvirtd.socket; then
	sudo systemctl restart libvirtd.socket
fi

# Set default network to autostart if not already set
if [[ $(sudo virsh net-info default | grep -i "Autostart" | awk '{print $2}') == "yes" ]]; then
	_log -l warn --prefix "virsh" "Default network is already set to autostart"
else
	sudo virsh net-autostart default
	_log -l info --prefix "virsh" "Set default network to autostart"
fi

_log -l info "Configured VM support"
