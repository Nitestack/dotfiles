#!/bin/bash

# {{ template "bash-library.sh" . }}

# The following line is for ShellCheck to correctly identify the above included library
true || source "../../.chezmoitemplates/bash-library.sh"

# Install packages
# {{ if eq .osid "linux-arch" }}
log_task "Arch Linux: Installing packages"
echo
sudo pacman -Syu

echo
log_task "pacman:"
# {{ range $_, $package_name := concat .dependencies.arch.pacman .dependencies.unix.packages .dependencies.all.packages }}
pacman_ensure_installed "{{- $package_name -}}"
# {{ end }}

# {{ else if eq .osid "linux-ubuntu" }}
log_task "Ubuntu: Installing packages"
echo
sudo apt update -y && sudo apt upgrade -y

echo
log_task "apt:"
# {{ range $_, $package_name := concat .dependencies.ubuntu.apt .dependencies.unix.packages .dependencies.all.packages }}
apt_ensure_installed "{{- $package_name -}}"
# {{ end }}

# {{ else if eq .chezmoi.os "darwin" }}
log_task "macOS: Installing formulae and casks"
echo
brew update && brew upgrade

echo
log_task "brew (formulae):"
# {{ range $_, $formula := concat .dependencies.macos.brew.formulae .dependencies.unix.packages .dependencies.all.packages }}
brew_ensure_formula_installed "{{- $formula -}}"
# {{ end }}

echo
log_task "brew (casks):"
# {{ range $_, $cask := concat .dependencies.macos.brew.casks }}
brew_ensure_cask_installed "{{- $cask -}}"
# {{ end }}

# {{ end }}

echo
log_task "Custom installation"

# NVM
start_loading "nvm"
if [[ -d "${NVM_DIR:-"~/.nvm"}/.git" ]]; then
	stop_loading "nvm"
else
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh | bash
	[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm
	stop_loading "nvm" --is-success
fi

# Custom installation
# {{ $dependencies := concat .dependencies.unix.custom .dependencies.all.custom }}
# {{ if eq .osid "linux-arch" }}
# {{ $dependencies = concat .dependencies.arch.custom $dependencies }}
# {{ else if eq .osid "linux-ubuntu" }}
# {{ $dependencies = concat .dependencies.ubuntu.custom $dependencies }}
# {{ else if eq .chezmoi.os "darwin" }}
# {{ $dependencies = concat .dependencies.macos.custom $dependencies }}
# {{ end }}

# {{ range $_, $pkg := $dependencies }}
# {{ range $cmd_name, $to_install := $pkg }}
start_loading "{{- $cmd_name -}}"
if command -v "{{- $cmd_name -}}" >/dev/null 2>&1; then
	stop_loading "{{- $cmd_name -}}"
else
	# {{ range $_, $line := $to_install }}
	# {{ "\n" }} command_exec {{ $line }}
	# {{ end }}
	stop_loading "{{- $cmd_name -}}" --is-success
fi
# {{ end }}
# {{ end }}

# Global npm packages
echo
log_task "npm:"
# {{ range $_, $package_name := .dependencies.all.pnpm }}
start_loading "{{- $package_name -}}"
if pnpm list -g --depth 0 | grep -q "{{- $package_name -}}"; then
	stop_loading "{{- $package_name -}}"
else
	command_exec pnpm add -g "{{- $package_name -}}"
	stop_loading "{{- $package_name -}}" --is-success
fi
# {{ end }}

# Global cargo crates
echo
log_task "cargo:"
# {{ range $_, $package_name := .dependencies.all.cargo }}
start_loading "{{- $package_name -}}"
if cargo install --list | grep -q "{{- $package_name -}}"; then
	stop_loading "{{- $package_name -}}"
else
	command_exec cargo install "{{- $package_name -}}"
	stop_loading "{{- $package_name -}}" --is-success
fi
# {{ end }}
echo
