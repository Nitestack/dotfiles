#!/usr/bin/env bash

# {{ template "bash-library.sh" . }}

# The following line is for ShellCheck to correctly identify the above included library
true || source "../../.chezmoitemplates/bash-library.sh"

start_task "Installing packages"

# Install packages
# {{ if eq .osid "linux-arch" }}
echo "Arch Linux: Installing packages"
echo
sudo pacman -Syu

echo
echo "pacman:"
# {{ range $_, $package_name := concat .dependencies.arch.pacman .dependencies.unix.packages .dependencies.all.packages }}
pacman_ensure_installed "{{- $package_name -}}"
# {{ end }}

echo
echo "yay:"
# {{ range $_, $package_name := .dependencies.arch.yay }}
yay_ensure_installed "{{- $package_name -}}"
# {{ end }}

# {{ else if eq .chezmoi.os "darwin" }}
update_mac() {
	sudo softwareupdate --agree-to-license --install-rosetta
	brew update && brew upgrade

	brew bundle --no-lock --file=/dev/stdin <<EOF
{{ range (concat .dependencies.macos.brew.formulae .dependencies.unix.packages .dependencies.all.packages | sortAlpha | uniq) }}
brew "{{- . -}}"
{{ end -}}
{{ range (.dependencies.macos.brew.casks | sortAlpha | uniq) }}
cask "{{- . -}}"
{{ end }}
EOF
}
show_spinner "macOS: Creating brew bundle for formulae and casks" "macOS: Created brew bundle for formulae and casks"

# {{ end }}

# Custom installation
echo
echo "Custom installation:"
# {{ $dependencies := concat .dependencies.unix.custom .dependencies.all.custom }}
# {{ if eq .osid "linux-arch" }}
# {{ $dependencies = concat .dependencies.arch.custom $dependencies }}
# {{ else if eq .chezmoi.os "darwin" }}
# {{ $dependencies = concat .dependencies.macos.custom $dependencies }}
# {{ end }}

# {{ range $_, $pkg := $dependencies }}
# {{ range $cmd_name, $lines := $pkg }}
install_custom_cmd() {
	if command -v "{{- $cmd_name -}}" &>/dev/null; then
		echo "{{- $cmd_name -}}"
		exit 2
	else
		# {{ "\n" }} {{ $lines }}
	fi
}
show_spinner "install_custom_cmd" "{{- $cmd_name -}}" "{{- $cmd_name -}}"
# {{ end }}
# {{ end }}

# Volta tools
echo
echo "volta:"
volta_list=$(volta list --format plain)
# {{ range $_, $package_name := .dependencies.all.volta }}
install_with_volta() {
	if echo "${volta_list}" | grep -q "{{- $package_name -}}"; then
		echo "{{- $package_name -}}"
		exit 2
	else
		volta install "{{- $package_name -}}"
	fi
}
show_spinner "install_with_volta" "{{- $package_name -}}" "{{- $package_name -}}"
# {{ end }}

# Global npm packages
echo
echo "npm:"
pnpm_list=$(pnpm list -g --depth 0)
# {{ range $_, $package_name := .dependencies.all.pnpm }}
install_with_pnpm() {
	if echo "${pnpm_list}" | grep -q "{{- $package_name -}}"; then
		echo "{{- $package_name -}}"
		exit 2
	else
		pnpm add -g "{{- $package_name -}}"
	fi
}
show_spinner "install_with_pnpm" "{{- $package_name -}}" "{{- $package_name -}}"
# {{ end }}

# Global cargo crates
echo
echo "cargo:"
cargo_list=$(cargo install --list)
# {{ range $_, $package_name := .dependencies.all.cargo }}
install_with_cargo() {
	if echo "${cargo_list}" | grep -q "{{- $package_name -}}"; then
		echo "{{- $package_name -}}"
		exit 2
	else
		cargo install "{{- $package_name -}}"
	fi
}
show_spinner "install_with_cargo" "{{- $package_name -}}" "{{- $package_name -}}"
# {{ end }}
echo

complete_task "Installed packages"
