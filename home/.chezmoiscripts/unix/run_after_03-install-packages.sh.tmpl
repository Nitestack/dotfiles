#!/bin/bash

# {{ template "bash-library.sh" . }}

sudo apt-get update && sudo apt-get upgrade -y

# Build essential
sudo apt install "build-essential"

# Install packages
# {{ range $_, $pkg_map := .packages.apt }}
#   {{ range $cmd_name, $to_install := $pkg_map }}
ensure_installed "{{- $cmd_name -}}" sudo apt install "{{- splitList " " $to_install | join "\" \"" -}}"
#   {{ end }}
# {{ end }}

# NVM
if [[ -d "${NVM_DIR:-"~/.nvm"}/.git" ]]; then
	log_info "nvm is already installed. Skipping."
else
	curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/master/install.sh | bash
fi

# Custom installation
# {{ range $_, $pkg := .packages.custom }}
# {{ range $cmd_name, $to_install := $pkg }}
if command -v {{ $cmd_name | quote }} >/dev/null 2>&1; then
	log_info "{{- $cmd_name }} is already installed. Skipping."
else
	log_task "Installing {{ $cmd_name -}}"
	# {{ range $_, $line := $to_install }}
	# {{ "\n" }}{{ $line }}
	# {{ end }}
fi
# {{ end }}
# {{ end }}

# pnpm
if command -v "corepack" >/dev/null 2>&1; then
	ensure_installed "pnpm" corepack prepare pnpm@latest --activate
else
	ensure_installed "pnpm" npm install -g pnpm
fi
# Neovim Node plugin
pnpm add -g neovim
pnpm add -g tree-sitter-cli
pnpm add -g @nitestack/project-manager
