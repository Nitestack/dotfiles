# {{ template "pwsh-library.ps1" . }}

Write-StartTask "Windows: Installing packages"

# Install winget packages
Write-Host "`nwinget:"
# {{ range (.dependencies.windows.winget | uniq) }}
$PackageName = (winget search -e "{{- . -}}" | Select-Object -Last 1).Split("{{- . -}}")[0].Trim()
Show-Spinner -StartMessage "$PackageName" -CompletionMessage "$PackageName" -ScriptBlock {
  winget list -e "{{- . -}}" | Out-Null
  if ($?) {
    $PackageName = (winget search -e "{{- . -}}" | Select-Object -Last 1).Split("{{- . -}}")[0].Trim()
    return ":$PackageName"
  }

  try {
    Invoke-Expression "winget install -e --accept-package-agreements --accept-source-agreements --id {{ . -}}"
  }
  catch {
    throw "Command failed: $_"
  }
}
# {{ end }}

# Install PowerShell Gallery modules
Write-Host "`nPowerShell Gallery:"
# {{ range (.dependencies.windows.modules | sortAlpha | uniq) }}
Show-Spinner -StartMessage "{{- . -}}" -CompletionMessage "{{- . -}}" -ScriptBlock {
  if (Get-Module -ListAvailable -Name "{{- . -}}" -ErrorAction "SilentlyContinue") {
    return ":{{- . -}}"
  }

  try {
    Invoke-Expression "Install-Module -AcceptLicense -Name {{ . -}}"
  }
  catch {
    throw "Command failed: $_"
  }
}
# {{ end }}

# Custom installation
Write-Host "`nCustom installation:"
# {{ range $_, $pkg := concat .dependencies.windows.custom .dependencies.all.custom }}
# {{ range $cmd_name, $lines := $pkg }}
Show-Spinner -StartMessage "{{- $cmd_name -}}" -CompletionMessage "{{- $cmd_name -}}" -ScriptBlock {
  if (Get-Command "{{- $cmd_name -}}" -ErrorAction SilentlyContinue) {
    return ":{{- $cmd_name -}}"
  }
  else {
    try {
      # {{ "\n" }} {{ $lines }}
    }
    catch {
      throw "Command failed: $_"
    }
  }
}
# {{ end }}
# {{ end }}

# Volta tools
Write-Host "`nvolta:"
# {{ range (.dependencies.all.volta | uniq) }}
Show-Spinner -StartMessage "{{- . -}}" -CompletionMessage "{{- . -}}" -ScriptBlock {
  $voltaList = volta list --format plain
  if ($voltaList -match "{{- . -}}") {
    return ":{{- . -}}"
  }
  else {
    try {
      Invoke-Expression "volta install {{ . -}}"
    }
    catch {
      throw "Command failed: $_"
    }
  }
}
# {{ end }}

# Global npm dependencies
Write-Host "`nnpm:"
# {{ range (.dependencies.all.pnpm | sortAlpha | uniq) }}
Show-Spinner -StartMessage "{{- . -}}" -CompletionMessage "{{- . -}}" -ScriptBlock {
  $pnpmList = pnpm list -g --depth 0
  if ($pnpmList -match "{{- . -}}") {
    return ":{{- . -}}"
  }
  else {
    try {
      Invoke-Expression "pnpm add -g {{ . -}}"
    }
    catch {
      throw "Command failed: $_"
    }
  }
}
# {{ end }}

# Global cargo crates
Write-Host "`ncargo:"
# {{ range (.dependencies.all.cargo | sortAlpha | uniq) }}
Show-Spinner -StartMessage "{{- . -}}" -CompletionMessage "{{- . -}}" -ScriptBlock {
  $cargoList = cargo install --list
  if ($cargoList -match "{{- . -}}") {
    return ":{{- . -}}"
  }
  else {
    try {
      Invoke-Expression "cargo install {{ . -}}"
    }
    catch {
      throw "Command failed: $_"
    }
  }
}
# {{ end }}

Write-Host
Write-CompleteTask "Windows: Installed packages"
