# {{ template "pwsh-library.ps1" . }}

Write-StartTask "Windows: Installing packages"

# Install winget packages
Write-Host "`nwinget:"
# {{ range $_, $package_id := concat .dependencies.windows.winget }}
$PackageName = (winget search --id "{{- $package_id -}}" | Select-Object -Last 1).Split("{{- $package_id -}}")[0].Trim()
Show-Spinner -StartMessage "$PackageName" -CompletionMessage "$PackageName" -ScriptBlock {
  winget list -e "{{- $package_id -}}" | Out-Null
  if ($?) {
    $PackageName = (winget search --id "{{- $package_id -}}" | Select-Object -Last 1).Split("{{- $package_id -}}")[0].Trim()
    return ":$PackageName"
  }

  try {
    Invoke-Expression "winget install -e --accept-package-agreements --accept-source-agreements --id {{ $package_id -}}"
  }
  catch {
    throw "Command failed: $_"
  }
}
# {{ end }}

# Custom installation
Write-Host "`nCustom installation:"
# {{ range $_, $pkg := concat .dependencies.windows.custom .dependencies.all.custom }}
# {{ range $cmd_name, $to_install := $pkg }}
Show-Spinner -StartMessage "{{- $cmd_name -}}" -CompletionMessage "{{- $cmd_name -}}" -ScriptBlock {
  if (Get-Command "{{- $cmd_name -}}" -ErrorAction SilentlyContinue) {
    return ":{{- $cmd_name -}}"
  }
  else {
    # {{ range $_, $line := $to_install }}
    try {
      # {{ "\n" }} Invoke-Expression {{ $line | quote }}
    }
    catch {
      throw "Command failed: $_"
    }
    # {{ end }}
  }
}
# {{ end }}
# {{ end }}

# Global npm dependencies
Write-Host "`nnpm:"
# {{ range $_, $package_name := .dependencies.all.pnpm }}
Show-Spinner -StartMessage "{{- $package_name -}}" -CompletionMessage "{{- $package_name -}}" -ScriptBlock {
  $pnpmList = pnpm list -g --depth 0
  if ($pnpmList -match "{{- $package_name -}}") {
    return ":{{- $package_name -}}"
  }
  else {
    try {
      Invoke-Expression "pnpm add -g {{ $package_name -}}"
    }
    catch {
      throw "Command failed: $_"
    }
  }
}
# {{ end }}

# Global cargo crates
Write-Host "`ncargo:"
# {{ range $_, $package_name := .dependencies.all.cargo }}
Show-Spinner -StartMessage "{{- $package_name -}}" -CompletionMessage "{{- $package_name -}}" -ScriptBlock {
  $cargoList = cargo install --list
  if ($cargoList -match "{{- $package_name -}}") {
    return ":{{- $package_name -}}"
  }
  else {
    try {
      Invoke-Expression "cargo install {{ $package_name -}}"
    }
    catch {
      throw "Command failed: $_"
    }
  }
}
# {{ end }}

Write-Host
Write-CompleteTask "Windows: Installed packages"
